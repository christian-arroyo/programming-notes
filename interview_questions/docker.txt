What is Docker, and what are its main components?
Answer: Docker is a platform for developing, shipping, and running applications in containers. Its main components include the Docker Engine, Docker Hub, Docker Compose, and Docker Swarm.

How do Docker containers differ from virtual machines (VMs)?
Answer: Docker containers are lightweight and share the host OS kernel, while VMs are heavier, including a full OS for each instance. Containers are more efficient and start faster than VMs.

What is a Dockerfile, and what is its purpose?
Answer: A Dockerfile is a script containing a series of commands to build a Docker image. It defines the environment and steps required to set up the application.

Explain the difference between Docker image and Docker container.
Answer: A Docker image is a read-only template used to create containers. A Docker container is a runnable instance of an image.

How do you create and run a Docker container from an image?
Answer: Use docker build to create an image from a Dockerfile and docker run to start a container from an image.

What is Docker Compose, and how is it used?
Answer: Docker Compose is a tool for defining and running multi-container Docker applications. It uses a YAML file to configure the application’s services.

How do you scale Docker containers using Docker Compose?
Answer: Use the docker-compose up --scale command followed by the service name and number of instances.

What is the purpose of Docker volumes?
Answer: Docker volumes are used to persist data generated by and used by Docker containers, enabling data to be shared among containers and survive container restarts.

How do you manage environment variables in Docker?
Answer: Environment variables can be managed using the ENV instruction in a Dockerfile, or by passing them with the -e flag in the docker run command or specifying them in a Docker Compose file.

What is Docker Swarm, and how does it differ from Kubernetes?
Answer: Docker Swarm is Docker’s native clustering and orchestration tool. It is simpler but less feature-rich than Kubernetes, which is a more comprehensive and flexible orchestration platform.

How do you expose a Docker container's port to the host?
Answer: Use the -p or --publish flag in the docker run command to map a container’s port to a port on the host.

What is the docker ps command used for?
Answer: The docker ps command lists all running Docker containers.

How can you share a Docker image with others?
Answer: You can share a Docker image by pushing it to a Docker registry like Docker Hub using the docker push command.

What is the difference between the COPY and ADD instructions in a Dockerfile?
Answer: Both COPY and ADD instructions copy files from the host to the Docker image. ADD also supports remote URL sources and automatic extraction of compressed files.

How do you inspect the details of a Docker image or container?
Answer: Use the docker inspect command followed by the image or container ID.